{"version":3,"sources":["scripts/app-e82f9c999b.js"],"names":["angular","module","schedule","link","scope","element","attrs","dateFrom","dateTo","directive","bindToController","controller","ScheduleController","controllerAs","restrict","templateUrl","elem","attr","events","replace","$log","$interval","activate","setCurrentTime","getDays","from","to","title","date","today","startDate","endDate","createdBy","top","height","left","width","document","querySelectorAll","wrapper","firstRow","wrapperHeight","parseInt","getComputedStyle","firstRowHeight","minuteHeight","now","Date","then","getFullYear","getMonth","getDate","minutesFromMidnight","timeString","timeNow","textContent","style","getTimes","vm","this","days","times","error","$inject","models","service","$q","$timeout","getList","deferred","defer","resp","data","keep","eventsList","resolve","promise","router","$urlRouterProvider","$stateProvider","state","url","config","CalendarController","$scope","$root","getEventsList","callback","gotEventsCallback","options","eventsLoading","call","info","prototype","getHours","getMinutes","otherwise","constant","API_ROOT","run","$templateCache","put"],"mappings":"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","file":"scripts/app-e82f9c999b.js","sourcesContent":["(function() {\n    'use strict';\n\n    angular\n        .module('app.core', [\n            'ngAnimate',\n            'ngSanitize',\n            'ngMessages',\n            'ui.router',\n            \n            'models'\n        ]);\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('app.core')\n        .directive('schedule', schedule);\n\n    schedule.$inject = [];\n\n    /* @ngInject */\n    function schedule() {\n        // Usage:\n        //\n        // Creates:\n        //\n        var directive = {\n            bindToController: true,\n            controller: ScheduleController,\n            controllerAs: 'schedule',\n            link: link,\n            restrict: 'E',\n            templateUrl: function(elem, attr) {\n                return '/app/schedule/schedule.html';\n            },\n            scope: {\n                events: '=',\n                'dateFrom': '@',\n                'dateTo': '@'\n            },\n            replace: true\n        };\n        return directive;\n\n        function link(scope, element, attrs) {\n            scope.dateFrom = attrs.dateFrom;\n            scope.dateTo = attrs.dateTo;\n        }\n    }\n\n    ScheduleController.$inject = ['$log', '$interval'];\n\n    /* @ngInject */\n    function ScheduleController($log, $interval) {\n        var vm = this;\n\n        if (!vm.dateFrom || !vm.dateTo) {\n            $log.error('dateFrom and dateTo on schedule directive are obligatory!');\n            return false;\n        }\n\n        vm.days = getDays(vm.dateFrom, vm.dateTo, vm.events);\n        vm.times = getTimes();\n        vm.setCurrentTime = setCurrentTime;\n\n        activate();\n\n\n        // Public\n\n        function publicFunc() {\n\n        };\n\n\n        // Private\n\n        function activate() {\n            $interval(setCurrentTime, 1000);\n        };\n\n        // Makes an array where object is the day, \n        // filled with events from *events* attribute\n        function getDays(from, to, events) {\n            // TODO: mock\n            return [\n                {\n                    title: 'Пятница 25',\n                    date: 'Thu Mar 25 2016 00:00:00 GMT+0300 (MSK)',\n                    'today': true,\n                    'events': [\n                        {\n                            title: 'Встреча совета директоров',\n                            startDate: 'Fri Mar 25 2016 10:25:00 GMT+0300 (MSK)',\n                            endDate: 'Fri Mar 25 2016 12:35:00 GMT+0300 (MSK)',\n                            createdBy: 3,\n                            top: '1066px',\n                            height: '111px',\n                            left: '0px',\n                            width: '100%'\n                        }\n                    ]\n                },\n                {\n                    title: 'Суббота 26',\n                    date: 'Sat Mar 26 2016 00:00:00 GMT+0300 (MSK)',\n                    'today': false,\n                    'events': [\n                        {\n                            title: 'Поездка в Питер',\n                            startDate: 'Sat Mar 26 2016 14:25:00 GMT+0300 (MSK)',\n                            endDate: 'Sat Mar 26 2016 16:35:00 GMT+0300 (MSK)',\n                            createdBy: 1,\n                            top: '877px',\n                            height: '150px',\n                            left: '0px',\n                            width: '50%'\n                        },\n                        {\n                            title: 'Совещание правительства',\n                            startDate: 'Sat Mar 26 2016 14:25:00 GMT+0300 (MSK)',\n                            endDate: 'Sat Mar 26 2016 16:15:00 GMT+0300 (MSK)',\n                            createdBy: 2,\n                            top: '977px',\n                            height: '249px',\n                            left: '50%',\n                            width: '50%'\n                        }\n                    ]\n                },\n                {\n                    title: 'Воскресенье 27',\n                    date: 'Sun Mar 27 2016 00:00:00 GMT+0300 (MSK)',\n                    'today': false,\n                    'events': [\n                        {\n                            title: 'Совещание с советом диреторов компании',\n                            startDate: 'Sun Mar 27 2016 17:25:00 GMT+0300 (MSK)',\n                            endDate: 'Sun Mar 27 2016 22:00:00 GMT+0300 (MSK)',\n                            createdBy: 2,\n                            top: '528px',\n                            height: '150px',\n                            left: '0px',\n                            width: '100%'\n                        },\n                        {\n                            title: 'Встреча с молодыми предпрнимателями',\n                            startDate: 'Sun Mar 27 2016 17:25:00 GMT+0300 (MSK)',\n                            endDate: 'Sun Mar 27 2016 22:00:00 GMT+0300 (MSK)',\n                            createdBy: 1,\n                            top: '1526px',\n                            height: '150px',\n                            left: '0px',\n                            width: '100%'\n                        }\n                    ]\n                },\n            ]\n        };\n\n        // TODO: get this from server maybe?\n        function setCurrentTime() {\n            var elem = document.querySelectorAll('.b-schedule__current-time')[0],\n                wrapper = document.querySelectorAll('.b-schedule')[0],\n                firstRow = document.querySelectorAll('.b-schedule__time-spacer')[0],\n                wrapperHeight = parseInt(getComputedStyle(wrapper).height),\n                firstRowHeight = parseInt(getComputedStyle(firstRow).height),\n                minuteHeight = ((wrapperHeight- firstRowHeight) / (24 * 60)),\n                now = new Date(),\n                then = new Date(\n                        now.getFullYear(),\n                        now.getMonth(),\n                        now.getDate(),\n                        0,0,0),\n                minutesFromMidnight = (now - then) / 1000 / 60,\n                timeString = now.timeNow();\n\n            elem.textContent = timeString;\n            elem.style.top =  parseInt(parseInt(minutesFromMidnight) * minuteHeight) +\n                    firstRowHeight + 'px';  \n        };\n\n        // TODO: more elegant?\n        function getTimes() {\n            return [\n                '00:00',\n                '00:30',\n                '01:00',\n                '01:30',\n                '02:00',\n                '02:30',\n                '03:00',\n                '03:30',\n                '04:00',\n                '04:30',\n                '05:00',\n                '05:30',\n                '06:00',\n                '06:30',\n                '07:00',\n                '07:30',\n                '08:00',\n                '08:30',\n                '09:00',\n                '09:30',\n                '10:00',\n                '10:30',\n                '11:00',\n                '11:30',\n                '12:00',\n                '12:30',\n                '13:00',\n                '13:30',\n                '14:00',\n                '14:30',\n                '15:00',\n                '15:30',\n                '16:00',\n                '16:30',\n                '17:00',\n                '17:30',\n                '18:00',\n                '18:30',\n                '19:00',\n                '19:30',\n                '20:00',\n                '20:30',\n                '21:00',\n                '21:30',\n                '22:00',\n                '22:30',\n                '23:00',\n                '23:30'\n            ];\n        };\n    }\n})();\n(function() {\n    'use strict';\n\n    angular\n        .module('models', []);\n\n})();\n(function() {\n    'use strict';\n\n    angular\n        .module('models')\n        .service('models', models);\n\n    models.$inject = ['events'];\n\n    /* @ngInject */\n    function models(events) {\n        this.events = events;\n\n        ////////////////\n    }\n})();\n(function() {\n    'use strict';\n\n    angular\n        .module('models')\n        .service('events', events);\n\n    events.$inject = ['$q', '$timeout'];\n\n    /* @ngInject */\n    function events($q, $timeout) {\n        this.getList = getList;\n\n        ////////////////\n\n        // Public\n\n        function getList() {\n            var deferred = $q.defer();\n\n            // TODO: mock!\n            var resp = {\n                'data': {\n                    'events': [\n                        {\n                            title: 'Поездка в Питер',\n                            startDate: 'Sat Mar 26 2016 14:25:00 GMT+0300 (MSK)',\n                            endDate: 'Sat Mar 26 2016 16:35:00 GMT+0300 (MSK)',\n                            createdBy: 1\n                        },\n                        {\n                            title: 'Совещание правительства',\n                            startDate: 'Sat Mar 26 2016 14:25:00 GMT+0300 (MSK)',\n                            endDate: 'Sat Mar 26 2016 16:15:00 GMT+0300 (MSK)',\n                            createdBy: 2\n                        },\n                        {\n                            title: 'Встреча совета директоров',\n                            startDate: 'Fri Mar 25 2016 10:25:00 GMT+0300 (MSK)',\n                            endDate: 'Fri Mar 25 2016 12:35:00 GMT+0300 (MSK)',\n                            createdBy: 3\n                        },\n                        {\n                            title: 'Встреча с молодыми предпрнимателями',\n                            startDate: 'Sun Mar 27 2016 17:25:00 GMT+0300 (MSK)',\n                            endDate: 'Sun Mar 27 2016 22:00:00 GMT+0300 (MSK)',\n                            createdBy: 1\n                        }\n                    ]\n                }\n            };\n\n            \n            // TODO: get events api point\n            $timeout(function () {\n                keep.eventsList = resp.data;\n                deferred.resolve(keep.eventsList);\n            }, 500);\n\n            return deferred.promise;\n        }\n\n\n        // Private\n\n        var keep = {};\n\n\n    }\n})();\n(function() {\n    'use strict';\n\n    angular\n        .module('app', [\n            // common\n            'app.core',\n\n            // features\n            'app.calendar'\n        ]);\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('app')\n        .config(router);\n\n    router.$inject = ['$urlRouterProvider', '$stateProvider'];\n\n    function router($urlRouterProvider, $stateProvider) {\n        $stateProvider\n            .state('calendar', {\n                url: '/calendar',\n                templateUrl: 'app/calendar/calendar.html',\n                controller: 'CalendarController',\n                controllerAs: 'calendar'\n            });\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('app.calendar', [\n            'app'\n        ]);\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('app.calendar')\n        .controller('CalendarController', CalendarController);\n\n    CalendarController.$inject = ['$scope', '$rootScope', '$log', 'models'];\n\n    /* @ngInject */\n    function CalendarController($scope, $root, $log, models) {\n        var vm = this;\n\n        // TODO: Get actual date\n        vm.date = 'Март 2016';\n        vm.eventsLoading = true;\n        vm.events = [];\n\n        activate();\n\n\n        // Public\n\n        function publicFunc() {\n\n        }\n\n\n        // Private\n\n        function activate() {\n            // TODO: include date range into request\n            getEventsList({\n                callback: gotEventsCallback\n            });\n        }\n\n        function getEventsList(options) {\n            vm.eventsLoading = true;\n            models.events\n                .getList()\n                .then(function(resp) {\n                    if (options && options.callback) {\n                        options.callback.call(vm, resp);\n                    }\n                }, function(resp) {\n                    $log.error('getEventsList error: ', resp);\n                });\n        }\n\n        function gotEventsCallback(data) {\n            $log.info('Events: ', data);\n            vm.events = data;\n            vm.eventsLoading = false;\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    Date.prototype.timeNow = function () {\n\t\treturn ((this.getHours() < 10)?\"0\":\"\") + this.getHours() +\":\"+ ((this.getMinutes() < 10)?\"0\":\"\") + this.getMinutes();\n\t}\n\n})();\n(function() {\n    'use strict';\n\n    angular\n        .module('app')\n        .config(router);\n\n    router.$inject = ['$urlRouterProvider'];\n\n    function router($urlRouterProvider) {\n        $urlRouterProvider.otherwise('/calendar');\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('app')\n        .constant('CONFIG', config);\n\n    var config = {\n        API_ROOT: 'http://demo9752422.mockable.io/'\n    };\n\n})();\n\nangular.module(\"webapp\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"app/calendar/calendar.html\",\"<div class=\\\"l-view__cnt\\\"><div class=\\\"l-header ui-clearfix\\\"><div class=\\\"l-header__left\\\"><div class=\\\"l-header__block\\\"><div class=\\\"b-calendar-heading\\\"><h2 class=\\\"ui-h1\\\" ng-bind=\\\"calendar.date\\\"></h2></div></div><div class=\\\"l-header__block\\\"><div class=\\\"b-calendar-filter\\\"></div></div></div><div class=\\\"l-header__right\\\"><div class=\\\"l-header__block\\\"></div><div class=\\\"l-header__block\\\"></div></div></div><div class=\\\"l-content\\\" ng-class=\\\"{\\'loading\\': calendar.eventsLoading, \\'loading-events\\': calendar.eventsLoading}\\\"><schedule date-from=\\\"Fri Mar 25 2016 00:00:00 GMT+0300 (MSK)\\\" date-to=\\\"Sun Mar 27 2016 00:00:00 GMT+0300 (MSK)\\\" events=\\\"calendar.events\\\"></schedule></div></div>\");\n$templateCache.put(\"app/schedule/schedule.html\",\"<div class=\\\"b-schedule\\\"><div class=\\\"b-schedule__times\\\"><div class=\\\"b-schedule__time-spacer\\\"></div><div class=\\\"b-schedule__time\\\" ng-class=\\\"$index === 0 ? \\'first-time\\' : \\'\\'\\\" ng-repeat=\\\"time in schedule.times\\\" ng-bind=\\\"$index === 0 ? \\'\\' : time\\\"></div></div><div class=\\\"b-schedule__day\\\" ng-repeat=\\\"day in schedule.days\\\"><div class=\\\"b-schedule__day-title\\\" ng-class=\\\"{\\'today\\': day.today}\\\" ng-bind=\\\"day.title\\\"></div><div class=\\\"b-schedule__daytime\\\" ng-repeat=\\\"time in schedule.times\\\"></div><div class=\\\"b-event\\\" ng-repeat=\\\"event in day.events\\\" ng-bind=\\\"event.title\\\" ng-class=\\\"\\'color-\\' + event.createdBy\\\" style=\\\"top: {{event.top}}; height: {{event.height}}; left: {{event.left}}; width: {{event.width}}\\\"></div></div><div class=\\\"b-schedule__current-time\\\"></div></div>\");}]);"],"sourceRoot":"/source/"}